name: Run Unit Test Case with SonarQube Analysis
on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run test cases and analyze code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage
          pip install pytest

      - name: Get into Directory
        run: |
         cd src/tests/
         coverage run -m pytest test_math_operations.py test_employee_details.py


      - name: Pull SonarQube Docker Image
        run: docker pull sonarqube:latest

      - name: Start SonarQube Server
        run: docker run -d --name sonarqube -p 9000:9000 sonarqube:latest

      - name: Wait for SonarQube to start
        run: sleep 3

      - name: Create SonarQube Project
        run: |
          PROJECT_KEY=$(curl -u admin:admin -X POST "http://localhost:9000/api/projects/create?name=YourProjectName&project=YourProjectKey" | jq -r '.projectKey')
          echo "SonarQube project key: $PROJECT_KEY"
          PROJECT_TOKEN=$(curl -u admin:admin -X POST "http://localhost:9000/api/user_tokens/generate?name=YourProjectToken&login=admin" | jq -r '.token')
          echo "SonarQube project token: $PROJECT_TOKEN"

      - name: Run SonarScanner
        run: |
          sonar-scanner \
            -D"sonar.projectKey=$PROJECT_KEY" \
            -D"sonar.sources=." \
            -D"sonar.host.url=http://localhost:9000" \
            -D"sonar.login=$PROJECT_TOKEN"

      - name: Stop SonarQube Server
        run: docker stop sonarqube
